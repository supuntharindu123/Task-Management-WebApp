import PDFDocument from "pdfkit";

const generatePDF = async (tasks, user) => {
  const doc = new PDFDocument();

  // Add title with styling
  doc.font('Helvetica-Bold')
     .fontSize(24)
     .text("Tasks Report", { align: "center" });
  doc.moveDown();

  // Add metadata with styling
  doc.font('Helvetica')
     .fontSize(12)
     .text(`Generated on: ${new Date().toLocaleDateString()}`, { align: "right" })
     .moveDown()
     .text(`Generated by: ${user.name} (${user.role})`)
     .moveDown();

  // Add tasks with enhanced formatting
  tasks.forEach((task, index) => {
    // Task title with number
    doc.font('Helvetica-Bold')
       .fontSize(14)
       .text(`${index + 1}. ${task.title}`, { continued: true })
       .moveDown(0.5);

    // Task description with proper wrapping
    doc.font('Helvetica')
       .fontSize(11)
       .text('Description:', { continued: true })
       .text(task.description || 'No description provided', {
         indent: 20,
         width: 500,
         align: 'justify'
       })
       .moveDown(0.5);

    // Task details in a structured format
    doc.fontSize(10)
       .text('Status:', { continued: true })
       .font('Helvetica-Bold')
       .text(` ${task.status}`, { continued: true })
       .font('Helvetica')
       .text('  |  Assigned to:', { continued: true })
       .font('Helvetica-Bold')
       .text(` ${task.assignedTo?.name || "Unassigned"}`, { continued: true })
       .font('Helvetica')
       .text('  |  Deadline:', { continued: true })
       .font('Helvetica-Bold')
       .text(` ${new Date(task.deadline).toLocaleDateString()}`);

    // Add spacing between tasks
    doc.moveDown(2);
  });

  // Add page numbers
  const pages = doc.bufferedPageRange();
  for (let i = 0; i < pages.count; i++) {
    doc.switchToPage(i);
    doc.fontSize(10)
       .text(
         `Page ${i + 1} of ${pages.count}`,
         doc.page.margins.left,
         doc.page.height - doc.page.margins.bottom - 20,
         { align: 'center' }
       );
  }

  return doc;
};

export default generatePDF;
